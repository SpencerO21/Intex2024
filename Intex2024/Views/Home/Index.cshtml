@{
    ViewData["Title"] = "Home Page";
}
@model Intex2024.Models.ViewModels.ProductListViewModel





<h1>Recommended for you</h1>
<div class="text-center">
    <div class="row">
        <div class="col">
            <div class="card" style="width: 18rem;">
                <img src="https://www.lego.com/cdn/cs/set/assets/blt136fb371e68cccbd/60253.jpg?format=webply&fit=bounds&quality=75&width=800&height=800&dpr=1" class="card-img-top" alt="...">
                <div class="card-body">
                    <h5 class="card-title">Card title</h5>
                    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                    <a href="#" class="btn btn-primary">Go somewhere</a>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card" style="width: 18rem;">
                <img src="https://images.brickset.com/sets/images/7884-1.jpg?200805081137" class="card-img-top" alt="...">
                <div class="card-body">
                    <h5 class="card-title">Card title</h5>
                    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                    <a href="#" class="btn btn-primary">Go somewhere</a>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card" style="width: 18rem;">
                <img src="https://images.brickset.com/sets/images/7884-1.jpg?200805081137" class="card-img-top" alt="...">
                <div class="card-body">
                    <h5 class="card-title">Card title</h5>
                    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                    <a href="#" class="btn btn-primary">Go somewhere</a>
                </div>
            </div>
        </div>
    </div>
</div>

<h1>Products</h1>
@using (Html.BeginForm("Index", "Home", FormMethod.Get))
{
    <select name="pageSize" onchange="this.form.submit();">
        @if (Model.SelectedPageSize == 5)
        {
            <option value="5" selected>5</option>
        }
        else
        {
            <option value="5">5</option>
        }

        @if (Model.SelectedPageSize == 10)
        {
            <option value="10" selected>10</option>
        }
        else
        {
            <option value="10">10</option>
        }

        @if (Model.SelectedPageSize == 20)
        {
            <option value="20" selected>20</option>
        }
        else
        {
            <option value="20">20</option>
        }
        
    </select>
    <input type="hidden" name="cat" value="@Model.currentCat" />
    <input type="hidden" name="color" value="@Model.currentColor" />
    <input type="hidden" name="pageNum" value="@Model.PaginationInfo.CurrentPage" />
}




<div class="container">
    <div class="row">
        <!-- Filters Form Column -->
        <div class="col-md-4">
            <form method="get" action="@Url.Action("Index", "Home")">
                <!-- Product Filter Scrollable Box -->
                <div class="filter-box mb-3" style="max-height: 300px; overflow-y: auto;">
                    <vc:product-filter></vc:product-filter>
                </div>

                <!-- Color Filter Scrollable Box -->
                <div class="filter-box mb-3" style="max-height: 300px; overflow-y: auto;">
                    <vc:color-filter></vc:color-filter>
                </div>
                
                <input type="hidden" name="pageNum" value="@Model.PaginationInfo.CurrentPage" />
                <button type="submit" class="btn btn-primary">Apply Filters</button>
            </form>
        </div>

        <!-- Product Listings Column -->
        <div class="col-md-8">
            @foreach (Product p in Model.products)
            {
                <partial name="ProductCard" model="p"></partial>
            }

            <div page-model="@Model.PaginationInfo" page-action="Index" page-classes-enabled="true" page-class="btn" 
                 page-class-normal="btn-outline-dark" page-class-selected="btn-primary" page-url-cat="@Model.currentCat" class="btn-group pull-right m-1"></div>
        </div>
    </div>
</div>

